{ config, lib, pkgs, ... }:

with lib;

let

  cfg = config.services.gitlab-runner;
  user = config.users.users.gitlab-runner;

in

  {
    options = {
      services.gitlab-runner = {
        enable = mkEnableOption "Gitlab Runner";

        configFile = mkOption {
          default = "/etc/gitlab/runner.toml";
          description = ''
            Configuration file for gitlab-runner. This file is
            generated by running <command>gitlab-runner register</command>.
          '';
          type = types.path;
        };

        dataDir = mkOption {
          default = "/var/lib/gitlab-runner";
          description = ''
            The working directory for the Gitlab runner.
          '';
          type = types.str;
        };

        logFile = mkOption {
          type = types.path;
          default = "/var/log/gitlab-runner.log";
          description = ''
            The path of the log file for Gitlab runner service.
          '';
        };

      };
    };

    config = mkIf cfg.enable {

      environment.systemPackages = [ pkgs.gitlab-runner ];

      users.knownGroups = [ "gitlab-runner" ];
      users.knownUsers = [ "gitlab-runner" ];

      users.users.gitlab-runner.uid = mkDefault 357;
      users.users.gitlab-runner.home = mkDefault "/var/lib/gitlab-runner";
      users.users.gitlab-runner.shell = "/bin/bash";
      users.users.gitlab-runner.description = "gitlab-runner service user";

      launchd.daemons.gitlab-runner = {
        serviceConfig = {
          WorkingDirectory = cfg.dataDir;
          StandardErrorPath = cfg.logFile;
          StandardOutPath = cfg.logFile;
        };
        environment = {
          HOME = cfg.dataDir;
        };
        script = ''
          ${pkgs.gitlab-runner.bin}/bin/gitlab-runner run \
          --working-directory ${cfg.dataDir} \
         --config ${cfg.configFile} \
          --user gitlab-runner
        '';
      };

      system.activationScripts.preActivation.text = ''
        mkdir -p '${cfg.dataDir}'
        touch '${cfg.logFile}'
        chown ${toString user.uid}:${toString user.gid} '${cfg.dataDir}' '${cfg.logFile}'
      '';
    };
  }
